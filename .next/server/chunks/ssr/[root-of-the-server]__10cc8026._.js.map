{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/components/providers.tsx"],"sourcesContent":["'use client';\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { useState } from 'react';\n\n/**\n * Global Providers\n * - React Query for server state management\n * - Future: Theme Provider, Auth Provider, etc.\n */\nexport function Providers({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            // Optimization for million-user scale\n            staleTime: 60 * 1000, // 1 minute\n            gcTime: 5 * 60 * 1000, // 5 minutes (formerly cacheTime)\n            refetchOnWindowFocus: false,\n            refetchOnReconnect: true,\n            retry: 3,\n            retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n          },\n          mutations: {\n            retry: 1,\n          },\n        },\n      })\n  );\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      {process.env.NODE_ENV === 'development' && <ReactQueryDevtools initialIsOpen={false} />}\n    </QueryClientProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AACA;AAJA;;;;;AAWO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,MAAM,CAAC,YAAY,GAAG,IAAA,iNAAQ,EAC5B,IACE,IAAI,4LAAW,CAAC;YACd,gBAAgB;gBACd,SAAS;oBACP,sCAAsC;oBACtC,WAAW,KAAK;oBAChB,QAAQ,IAAI,KAAK;oBACjB,sBAAsB;oBACtB,oBAAoB;oBACpB,OAAO;oBACP,YAAY,CAAC,eAAiB,KAAK,GAAG,CAAC,OAAO,KAAK,cAAc;gBACnE;gBACA,WAAW;oBACT,OAAO;gBACT;YACF;QACF;IAGJ,qBACE,8OAAC,6MAAmB;QAAC,QAAQ;;YAC1B;YACA,oDAAyB,+BAAiB,8OAAC,0MAAkB;gBAAC,eAAe;;;;;;;;;;;;AAGpF","debugId":null}}]
}