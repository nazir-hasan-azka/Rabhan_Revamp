{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/components/providers.tsx"],"sourcesContent":["'use client';\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { useState } from 'react';\n\n/**\n * Global Providers\n * - React Query for server state management\n * - Future: Theme Provider, Auth Provider, etc.\n */\nexport function Providers({ children }: { children: React.ReactNode }) {\n  const [queryClient] = useState(\n    () =>\n      new QueryClient({\n        defaultOptions: {\n          queries: {\n            // Optimization for million-user scale\n            staleTime: 60 * 1000, // 1 minute\n            gcTime: 5 * 60 * 1000, // 5 minutes (formerly cacheTime)\n            refetchOnWindowFocus: false,\n            refetchOnReconnect: true,\n            retry: 3,\n            retryDelay: (attemptIndex) => Math.min(1000 * 2 ** attemptIndex, 30000),\n          },\n          mutations: {\n            retry: 1,\n          },\n        },\n      })\n  );\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      {process.env.NODE_ENV === 'development' && <ReactQueryDevtools initialIsOpen={false} />}\n    </QueryClientProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAmCO;;AAjCP;AAAA;AACA;AACA;;;AAJA;;;;AAWO,SAAS,UAAU,KAA2C;QAA3C,EAAE,QAAQ,EAAiC,GAA3C;;IACxB,MAAM,CAAC,YAAY,GAAG,IAAA,yKAAQ;8BAC5B,IACE,IAAI,+LAAW,CAAC;gBACd,gBAAgB;oBACd,SAAS;wBACP,sCAAsC;wBACtC,WAAW,KAAK;wBAChB,QAAQ,IAAI,KAAK;wBACjB,sBAAsB;wBACtB,oBAAoB;wBACpB,OAAO;wBACP,UAAU;kDAAE,CAAC,eAAiB,KAAK,GAAG,CAAC,OAAO,KAAK,cAAc;;oBACnE;oBACA,WAAW;wBACT,OAAO;oBACT;gBACF;YACF;;IAGJ,qBACE,6LAAC,gNAAmB;QAAC,QAAQ;;YAC1B;YACA,oDAAyB,+BAAiB,6LAAC,6MAAkB;gBAAC,eAAe;;;;;;;;;;;;AAGpF;GA3BgB;KAAA","debugId":null}}]
}