{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/lib/utils/cn.ts"],"sourcesContent":["import { type ClassValue, clsx } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\n/**\n * Utility function to merge Tailwind CSS classes\n * Combines clsx and tailwind-merge for optimal class handling\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAMO,SAAS;IAAG,IAAA,IAAA,OAAA,UAAA,QAAA,AAAG,SAAH,UAAA,OAAA,OAAA,GAAA,OAAA,MAAA;QAAG,OAAH,QAAA,SAAA,CAAA,KAAuB;;IACxC,OAAO,IAAA,yKAAO,EAAC,IAAA,gJAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/lib/utils/formatters.ts"],"sourcesContent":["import { format, formatDistanceToNow } from 'date-fns';\n\n/**\n * Date Formatting Utilities\n */\nexport function formatDate(date: Date | string | number, formatStr = 'PPP'): string {\n  return format(new Date(date), formatStr);\n}\n\nexport function formatRelativeTime(date: Date | string | number): string {\n  return formatDistanceToNow(new Date(date), { addSuffix: true });\n}\n\n/**\n * Number Formatting Utilities\n */\nexport function formatNumber(num: number, locale = 'en-US'): string {\n  return new Intl.NumberFormat(locale).format(num);\n}\n\nexport function formatCurrency(amount: number, currency = 'USD', locale = 'en-US'): string {\n  return new Intl.NumberFormat(locale, {\n    style: 'currency',\n    currency,\n  }).format(amount);\n}\n\nexport function formatPercentage(value: number, decimals = 2): string {\n  return `${(value * 100).toFixed(decimals)}%`;\n}\n\n/**\n * File Size Formatting\n */\nexport function formatFileSize(bytes: number): string {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n}\n\n/**\n * String Utilities\n */\nexport function truncate(str: string, length: number, suffix = '...'): string {\n  if (str.length <= length) return str;\n  return str.substring(0, length - suffix.length) + suffix;\n}\n\nexport function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1).toLowerCase();\n}\n\nexport function slugify(str: string): string {\n  return str\n    .toLowerCase()\n    .trim()\n    .replace(/[^\\w\\s-]/g, '')\n    .replace(/[\\s_-]+/g, '-')\n    .replace(/^-+|-+$/g, '');\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;AAKO,SAAS,WAAW,IAA4B;QAAE,YAAA,iEAAY;IACnE,OAAO,IAAA,kKAAM,EAAC,IAAI,KAAK,OAAO;AAChC;AAEO,SAAS,mBAAmB,IAA4B;IAC7D,OAAO,IAAA,4KAAmB,EAAC,IAAI,KAAK,OAAO;QAAE,WAAW;IAAK;AAC/D;AAKO,SAAS,aAAa,GAAW;QAAE,SAAA,iEAAS;IACjD,OAAO,IAAI,KAAK,YAAY,CAAC,QAAQ,MAAM,CAAC;AAC9C;AAEO,SAAS,eAAe,MAAc;QAAE,WAAA,iEAAW,OAAO,SAAA,iEAAS;IACxE,OAAO,IAAI,KAAK,YAAY,CAAC,QAAQ;QACnC,OAAO;QACP;IACF,GAAG,MAAM,CAAC;AACZ;AAEO,SAAS,iBAAiB,KAAa;QAAE,WAAA,iEAAW;IACzD,OAAO,AAAC,GAAkC,OAAhC,CAAC,QAAQ,GAAG,EAAE,OAAO,CAAC,WAAU;AAC5C;AAKO,SAAS,eAAe,KAAa;IAC1C,IAAI,UAAU,GAAG,OAAO;IACxB,MAAM,IAAI;IACV,MAAM,QAAQ;QAAC;QAAS;QAAM;QAAM;QAAM;KAAK;IAC/C,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,SAAS,KAAK,GAAG,CAAC;IAChD,OAAO,AAAC,GAAqD,OAAnD,WAAW,CAAC,QAAQ,KAAK,GAAG,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,KAAI,KAAY,OAAT,KAAK,CAAC,EAAE;AACvE;AAKO,SAAS,SAAS,GAAW,EAAE,MAAc;QAAE,SAAA,iEAAS;IAC7D,IAAI,IAAI,MAAM,IAAI,QAAQ,OAAO;IACjC,OAAO,IAAI,SAAS,CAAC,GAAG,SAAS,OAAO,MAAM,IAAI;AACpD;AAEO,SAAS,WAAW,GAAW;IACpC,OAAO,IAAI,MAAM,CAAC,GAAG,WAAW,KAAK,IAAI,KAAK,CAAC,GAAG,WAAW;AAC/D;AAEO,SAAS,QAAQ,GAAW;IACjC,OAAO,IACJ,WAAW,GACX,IAAI,GACJ,OAAO,CAAC,aAAa,IACrB,OAAO,CAAC,YAAY,KACpB,OAAO,CAAC,YAAY;AACzB","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/lib/utils/validators.ts"],"sourcesContent":["import { z } from 'zod';\n\n/**\n * Common Validation Schemas\n * Reusable validation schemas for enterprise applications\n */\n\n// Email validation with comprehensive regex\nexport const emailSchema = z\n  .string()\n  .email('Invalid email address')\n  .min(5, 'Email must be at least 5 characters')\n  .max(255, 'Email must not exceed 255 characters')\n  .toLowerCase()\n  .trim();\n\n// Password validation (enterprise security requirements)\nexport const passwordSchema = z\n  .string()\n  .min(12, 'Password must be at least 12 characters')\n  .max(128, 'Password must not exceed 128 characters')\n  .regex(/[a-z]/, 'Password must contain at least one lowercase letter')\n  .regex(/[A-Z]/, 'Password must contain at least one uppercase letter')\n  .regex(/[0-9]/, 'Password must contain at least one number')\n  .regex(/[^a-zA-Z0-9]/, 'Password must contain at least one special character');\n\n// URL validation\nexport const urlSchema = z.string().url('Invalid URL format').trim();\n\n// UUID validation\nexport const uuidSchema = z.string().uuid('Invalid UUID format');\n\n// Phone number validation (international format)\nexport const phoneSchema = z\n  .string()\n  .regex(/^\\+?[1-9]\\d{1,14}$/, 'Invalid phone number format')\n  .trim();\n\n// Slug validation\nexport const slugSchema = z\n  .string()\n  .regex(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, 'Invalid slug format')\n  .min(1)\n  .max(255)\n  .trim();\n\n// Username validation\nexport const usernameSchema = z\n  .string()\n  .min(3, 'Username must be at least 3 characters')\n  .max(30, 'Username must not exceed 30 characters')\n  .regex(/^[a-zA-Z0-9_-]+$/, 'Username can only contain letters, numbers, underscores and hyphens')\n  .trim();\n\n// Name validation\nexport const nameSchema = z\n  .string()\n  .min(1, 'Name is required')\n  .max(100, 'Name must not exceed 100 characters')\n  .regex(/^[a-zA-Z\\s'-]+$/, 'Name can only contain letters, spaces, hyphens and apostrophes')\n  .trim();\n\n/**\n * Utility Functions\n */\n\n// Sanitize HTML to prevent XSS\nexport function sanitizeHtml(input: string): string {\n  return input\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n}\n\n// Validate and sanitize user input\nexport function sanitizeInput(input: string): string {\n  return input.trim().replace(/[<>]/g, '');\n}\n\n// Check if string is valid JSON\nexport function isValidJson(str: string): boolean {\n  try {\n    JSON.parse(str);\n    return true;\n  } catch {\n    return false;\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAQO,MAAM,cAAc,0KAAC,CACzB,MAAM,GACN,KAAK,CAAC,yBACN,GAAG,CAAC,GAAG,uCACP,GAAG,CAAC,KAAK,wCACT,WAAW,GACX,IAAI;AAGA,MAAM,iBAAiB,0KAAC,CAC5B,MAAM,GACN,GAAG,CAAC,IAAI,2CACR,GAAG,CAAC,KAAK,2CACT,KAAK,CAAC,SAAS,uDACf,KAAK,CAAC,SAAS,uDACf,KAAK,CAAC,SAAS,6CACf,KAAK,CAAC,gBAAgB;AAGlB,MAAM,YAAY,0KAAC,CAAC,MAAM,GAAG,GAAG,CAAC,sBAAsB,IAAI;AAG3D,MAAM,aAAa,0KAAC,CAAC,MAAM,GAAG,IAAI,CAAC;AAGnC,MAAM,cAAc,0KAAC,CACzB,MAAM,GACN,KAAK,CAAC,sBAAsB,+BAC5B,IAAI;AAGA,MAAM,aAAa,0KAAC,CACxB,MAAM,GACN,KAAK,CAAC,8BAA8B,uBACpC,GAAG,CAAC,GACJ,GAAG,CAAC,KACJ,IAAI;AAGA,MAAM,iBAAiB,0KAAC,CAC5B,MAAM,GACN,GAAG,CAAC,GAAG,0CACP,GAAG,CAAC,IAAI,0CACR,KAAK,CAAC,oBAAoB,uEAC1B,IAAI;AAGA,MAAM,aAAa,0KAAC,CACxB,MAAM,GACN,GAAG,CAAC,GAAG,oBACP,GAAG,CAAC,KAAK,uCACT,KAAK,CAAC,mBAAmB,kEACzB,IAAI;AAOA,SAAS,aAAa,KAAa;IACxC,OAAO,MACJ,OAAO,CAAC,MAAM,SACd,OAAO,CAAC,MAAM,QACd,OAAO,CAAC,MAAM,QACd,OAAO,CAAC,MAAM,UACd,OAAO,CAAC,MAAM,UACd,OAAO,CAAC,OAAO;AACpB;AAGO,SAAS,cAAc,KAAa;IACzC,OAAO,MAAM,IAAI,GAAG,OAAO,CAAC,SAAS;AACvC;AAGO,SAAS,YAAY,GAAW;IACrC,IAAI;QACF,KAAK,KAAK,CAAC;QACX,OAAO;IACT,EAAE,UAAM;QACN,OAAO;IACT;AACF","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/lib/utils/index.ts"],"sourcesContent":["export { cn } from './cn';\nexport * from './formatters';\nexport * from './validators';\n"],"names":[],"mappings":";AAAA;AACA;AACA","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/components/dashboard/DashboardSidebar.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { usePathname } from 'next/navigation';\nimport { \n  Home,\n  Calculator,\n  FileText,\n  DollarSign,\n  ShoppingCart,\n  File,\n  LucideIcon\n} from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface NavItem {\n  name: string;\n  href: string;\n  icon: LucideIcon;\n}\n\nconst navItems: NavItem[] = [\n  { name: 'Dashboard', href: '/dashboard', icon: Home },\n  { name: 'Solar Calculator', href: '/calculator', icon: Calculator },\n  { name: 'Quote Request', href: '/quote-request', icon: FileText },\n  { name: 'Financing', href: '/financing', icon: DollarSign },\n  { name: 'Marketplace', href: '/marketplace', icon: ShoppingCart },\n  { name: 'Documents', href: '/documents', icon: File },\n];\n\nexport function DashboardSidebar() {\n  const pathname = usePathname();\n\n  return (\n    <aside className=\"w-[258px] h-screen bg-[#f5ffff] border-r border-[#dddddd] flex flex-col p-6 gap-7 fixed left-0 top-0 z-50\">\n      {/* Logo */}\n      <Link href=\"/\" className=\"w-[147px] h-[100px] relative flex-shrink-0\">\n        <Image\n          src=\"/images/rabhan-logo.svg\"\n          alt=\"RABHAN\"\n          fill\n          className=\"object-contain\"\n          priority\n        />\n      </Link>\n\n      {/* Navigation Menu */}\n      <nav className=\"flex flex-col gap-0\">\n        {navItems.map((item) => {\n          const Icon = item.icon;\n          const isActive = pathname === item.href;\n\n          return (\n            <Link\n              key={item.href}\n              href={item.href}\n              className={cn(\n                'flex items-center gap-2 p-2 rounded-lg transition-colors',\n                isActive\n                  ? 'bg-[#b3e0e0]'\n                  : 'hover:bg-[#b3e0e0]/50'\n              )}\n            >\n              <Icon className=\"w-6 h-6 text-black\" strokeWidth={2} />\n              <span className={cn(\n                'text-[20px] text-black font-poppins',\n                isActive ? 'font-medium' : 'font-normal'\n              )}>\n                {item.name}\n              </span>\n            </Link>\n          );\n        })}\n      </nav>\n    </aside>\n  );\n}\n"],"names":[],"mappings":";;;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;;;AAfA;;;;;;AAuBA,MAAM,WAAsB;IAC1B;QAAE,MAAM;QAAa,MAAM;QAAc,MAAM,8MAAI;IAAC;IACpD;QAAE,MAAM;QAAoB,MAAM;QAAe,MAAM,+NAAU;IAAC;IAClE;QAAE,MAAM;QAAiB,MAAM;QAAkB,MAAM,6NAAQ;IAAC;IAChE;QAAE,MAAM;QAAa,MAAM;QAAc,MAAM,mOAAU;IAAC;IAC1D;QAAE,MAAM;QAAe,MAAM;QAAgB,MAAM,yOAAY;IAAC;IAChE;QAAE,MAAM;QAAa,MAAM;QAAc,MAAM,6MAAI;IAAC;CACrD;AAEM,SAAS;;IACd,MAAM,WAAW,IAAA,oJAAW;IAE5B,qBACE,6LAAC;QAAM,WAAU;;0BAEf,6LAAC,0KAAI;gBAAC,MAAK;gBAAI,WAAU;0BACvB,cAAA,6LAAC,2IAAK;oBACJ,KAAI;oBACJ,KAAI;oBACJ,IAAI;oBACJ,WAAU;oBACV,QAAQ;;;;;;;;;;;0BAKZ,6LAAC;gBAAI,WAAU;0BACZ,SAAS,GAAG,CAAC,CAAC;oBACb,MAAM,OAAO,KAAK,IAAI;oBACtB,MAAM,WAAW,aAAa,KAAK,IAAI;oBAEvC,qBACE,6LAAC,0KAAI;wBAEH,MAAM,KAAK,IAAI;wBACf,WAAW,IAAA,2HAAE,EACX,4DACA,WACI,iBACA;;0CAGN,6LAAC;gCAAK,WAAU;gCAAqB,aAAa;;;;;;0CAClD,6LAAC;gCAAK,WAAW,IAAA,2HAAE,EACjB,uCACA,WAAW,gBAAgB;0CAE1B,KAAK,IAAI;;;;;;;uBAdP,KAAK,IAAI;;;;;gBAkBpB;;;;;;;;;;;;AAIR;GA9CgB;;QACG,oJAAW;;;KADd","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/components/dashboard/UserDropdown.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport Link from 'next/link';\nimport { User, LogOut } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface UserDropdownProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function UserDropdown({ isOpen, onClose }: UserDropdownProps) {\n  const dropdownRef = React.useRef<HTMLDivElement>(null);\n\n  // Close dropdown when clicking outside\n  React.useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        onClose();\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  return (\n    <div\n      ref={dropdownRef}\n      className={cn(\n        'absolute top-full right-0 mt-2 w-[105px] bg-white rounded-lg shadow-lg border border-[#dddddd] py-2 z-50',\n        'animate-in fade-in slide-in-from-top-2 duration-200'\n      )}\n    >\n      {/* Profile Option */}\n      <Link\n        href=\"/profile\"\n        onClick={onClose}\n        className=\"flex items-center gap-2 px-3 py-2 hover:bg-gray-50 transition-colors\"\n      >\n        <User className=\"w-4 h-4 text-black\" strokeWidth={2} />\n        <span className=\"text-[12px] text-black font-poppins\">Profile</span>\n      </Link>\n\n      {/* Logout Option */}\n      <button\n        onClick={() => {\n          onClose();\n          // Add logout logic here\n          console.log('Logout clicked');\n        }}\n        className=\"w-full flex items-center gap-2 px-3 py-2 hover:bg-gray-50 transition-colors text-left\"\n      >\n        <LogOut className=\"w-4 h-4 text-black\" strokeWidth={2} />\n        <span className=\"text-[12px] text-black font-poppins\">Logout</span>\n      </button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AACA;AAAA;;;AALA;;;;;AAYO,SAAS,aAAa,KAAsC;QAAtC,EAAE,MAAM,EAAE,OAAO,EAAqB,GAAtC;;IAC3B,MAAM,cAAc,uKAAY,CAAiB;IAEjD,uCAAuC;IACvC,0KAAe;kCAAC;YACd,MAAM;6DAAqB,CAAC;oBAC1B,IAAI,YAAY,OAAO,IAAI,CAAC,YAAY,OAAO,CAAC,QAAQ,CAAC,MAAM,MAAM,GAAW;wBAC9E;oBACF;gBACF;;YAEA,IAAI,QAAQ;gBACV,SAAS,gBAAgB,CAAC,aAAa;YACzC;YAEA;0CAAO;oBACL,SAAS,mBAAmB,CAAC,aAAa;gBAC5C;;QACF;iCAAG;QAAC;QAAQ;KAAQ;IAEpB,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,6LAAC;QACC,KAAK;QACL,WAAW,IAAA,2HAAE,EACX,4GACA;;0BAIF,6LAAC,0KAAI;gBACH,MAAK;gBACL,SAAS;gBACT,WAAU;;kCAEV,6LAAC,6MAAI;wBAAC,WAAU;wBAAqB,aAAa;;;;;;kCAClD,6LAAC;wBAAK,WAAU;kCAAsC;;;;;;;;;;;;0BAIxD,6LAAC;gBACC,SAAS;oBACP;oBACA,wBAAwB;oBACxB,QAAQ,GAAG,CAAC;gBACd;gBACA,WAAU;;kCAEV,6LAAC,uNAAM;wBAAC,WAAU;wBAAqB,aAAa;;;;;;kCACpD,6LAAC;wBAAK,WAAU;kCAAsC;;;;;;;;;;;;;;;;;;AAI9D;GAtDgB;KAAA","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/components/dashboard/DashboardHeader.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { \n  Search,\n  Bell,\n  ShoppingCart,\n  ChevronDown\n} from 'lucide-react';\nimport { UserDropdown } from './UserDropdown';\n\ninterface DashboardHeaderProps {\n  userName?: string;\n  userEmail?: string;\n  cartItemCount?: number;\n}\n\nexport function DashboardHeader({ \n  userName = 'Fayaz rahman',\n  userEmail = 'fayazrahman.....',\n  cartItemCount = 2\n}: DashboardHeaderProps) {\n  const [searchQuery, setSearchQuery] = React.useState('');\n  const [isDropdownOpen, setIsDropdownOpen] = React.useState(false);\n\n  // Get user initials\n  const getInitials = (name: string) => {\n    return name\n      .split(' ')\n      .map(n => n[0])\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  return (\n    <header className=\"h-[80px] border-b border-[#dddddd] bg-white flex items-center justify-between px-6 ml-[258px] fixed top-0 right-0 left-0 z-40\">\n      {/* Search Bar */}\n      <div className=\"relative w-[555px]\">\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          className=\"w-full h-[45px] pl-4 pr-12 border border-[#dddddd] rounded-lg text-[16px] text-[#666666] font-poppins placeholder:text-[#666666] focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20 transition-all\"\n        />\n        <Search className=\"absolute right-4 top-1/2 -translate-y-1/2 w-6 h-6 text-[#aaaaaa]\" />\n      </div>\n\n      {/* Right Side - Icons and User */}\n      <div className=\"flex items-center gap-6\">\n        {/* Shopping Cart with Badge */}\n        <button className=\"relative hover:opacity-80 transition-opacity\">\n          <ShoppingCart className=\"w-6 h-6 text-black\" strokeWidth={2} />\n          {cartItemCount > 0 && (\n            <div className=\"absolute -top-1 -right-1 w-[12px] h-[12px] bg-[#42B2B1] rounded-full flex items-center justify-center\">\n              <span className=\"text-[10px] text-white font-medium font-poppins leading-none\">\n                {cartItemCount}\n              </span>\n            </div>\n          )}\n        </button>\n\n        {/* Notifications */}\n        <button className=\"relative hover:opacity-80 transition-opacity\">\n          <Bell className=\"w-6 h-6 text-black\" strokeWidth={2} />\n        </button>\n\n        {/* User Profile Dropdown */}\n        <div className=\"relative\">\n          <button \n            className=\"flex items-center gap-3 hover:opacity-80 transition-opacity\"\n            onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n          >\n            {/* Avatar */}\n            <div className=\"w-[42px] h-[42px] rounded-full bg-[#68c1c1] flex items-center justify-center\">\n              <span className=\"text-[20px] text-white font-poppins\">\n                {getInitials(userName)}\n              </span>\n            </div>\n\n            {/* User Info */}\n            <div className=\"flex flex-col items-start\">\n              <span className=\"text-[12px] text-black font-poppins leading-tight\">\n                {userName}\n              </span>\n              <span className=\"text-[10px] text-[#aaaaaa] font-poppins leading-tight\">\n                {userEmail}\n              </span>\n            </div>\n\n            {/* Dropdown Icon */}\n            <ChevronDown \n              className={`w-6 h-6 text-black transition-transform duration-200 ${\n                isDropdownOpen ? 'rotate-180' : ''\n              }`} \n            />\n          </button>\n\n          {/* Dropdown Menu */}\n          <UserDropdown \n            isOpen={isDropdownOpen}\n            onClose={() => setIsDropdownOpen(false)}\n          />\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAMA;;;AATA;;;;AAiBO,SAAS,gBAAgB,KAIT;QAJS,EAC9B,WAAW,cAAc,EACzB,YAAY,kBAAkB,EAC9B,gBAAgB,CAAC,EACI,GAJS;;IAK9B,MAAM,CAAC,aAAa,eAAe,GAAG,yKAAc,CAAC;IACrD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,yKAAc,CAAC;IAE3D,oBAAoB;IACpB,MAAM,cAAc,CAAC;QACnB,OAAO,KACJ,KAAK,CAAC,KACN,GAAG,CAAC,CAAA,IAAK,CAAC,CAAC,EAAE,EACb,IAAI,CAAC,IACL,WAAW,GACX,KAAK,CAAC,GAAG;IACd;IAEA,qBACE,6LAAC;QAAO,WAAU;;0BAEhB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,OAAO;wBACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;wBAC9C,WAAU;;;;;;kCAEZ,6LAAC,mNAAM;wBAAC,WAAU;;;;;;;;;;;;0BAIpB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAO,WAAU;;0CAChB,6LAAC,yOAAY;gCAAC,WAAU;gCAAqB,aAAa;;;;;;4BACzD,gBAAgB,mBACf,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAK,WAAU;8CACb;;;;;;;;;;;;;;;;;kCAOT,6LAAC;wBAAO,WAAU;kCAChB,cAAA,6LAAC,6MAAI;4BAAC,WAAU;4BAAqB,aAAa;;;;;;;;;;;kCAIpD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,WAAU;gCACV,SAAS,IAAM,kBAAkB,CAAC;;kDAGlC,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC;4CAAK,WAAU;sDACb,YAAY;;;;;;;;;;;kDAKjB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;gDAAK,WAAU;0DACb;;;;;;0DAEH,6LAAC;gDAAK,WAAU;0DACb;;;;;;;;;;;;kDAKL,6LAAC,sOAAW;wCACV,WAAW,AAAC,wDAEX,OADC,iBAAiB,eAAe;;;;;;;;;;;;0CAMtC,6LAAC,2JAAY;gCACX,QAAQ;gCACR,SAAS,IAAM,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;AAM7C;GA3FgB;KAAA","debugId":null}},
    {"offset": {"line": 641, "column": 0}, "map": {"version":3,"sources":["file:///Users/nazirhasan/Documents/GitHub/rabhan-revamp/app/%28dashboard%29/profile/page.tsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport { User, Home, Briefcase, Settings, CheckCircle2, MapPin, ChevronDown } from 'lucide-react';\nimport { DashboardSidebar } from '@/components/dashboard/DashboardSidebar';\nimport { DashboardHeader } from '@/components/dashboard/DashboardHeader';\n\ntype TabType = 'personal' | 'property' | 'employment' | 'preferences';\n\ninterface TabConfig {\n  id: TabType;\n  name: string;\n  icon: typeof User;\n}\n\nconst TABS: TabConfig[] = [\n  { id: 'personal', name: 'Personal', icon: User },\n  { id: 'property', name: 'Property', icon: Home },\n  { id: 'employment', name: 'Employment', icon: Briefcase },\n  { id: 'preferences', name: 'Preferences', icon: Settings },\n];\n\nexport default function ProfilePage() {\n  const [activeTab, setActiveTab] = React.useState<TabType>('preferences');\n  const [formData, setFormData] = React.useState({\n    // Personal\n    firstName: '',\n    lastName: '',\n    phone: '',\n    email: '',\n    region: '',\n    city: '',\n    district: '',\n    streetAddress: '',\n    postalCode: '',\n    landmark: '',\n    gpsCoordinates: '',\n    // Property\n    propertyType: '',\n    propertyOwnership: '',\n    roofSize: '',\n    monthlyConsumption: '',\n    meterNumber: '',\n    // Employment\n    employmentStatus: '',\n    employerName: '',\n    jobTitle: '',\n    monthlyIncome: '',\n    yearsEmployed: '',\n  });\n\n  // Preferences state\n  const [preferences, setPreferences] = React.useState({\n    language: 'en', // 'en' or 'ar'\n    emailNotifications: true,\n    smsNotifications: true,\n    marketingCommunications: true,\n  });\n\n  const profileCompletion = 25;\n\n  const handleChange = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  const handlePreferenceToggle = (field: keyof typeof preferences) => {\n    setPreferences(prev => ({\n      ...prev,\n      [field]: !prev[field],\n    }));\n  };\n\n  const handleLanguageToggle = () => {\n    setPreferences(prev => ({\n      ...prev,\n      language: prev.language === 'en' ? 'ar' : 'en',\n    }));\n  };\n\n  const handleGetLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const coords = `${position.coords.latitude}, ${position.coords.longitude}`;\n          setFormData(prev => ({\n            ...prev,\n            gpsCoordinates: coords,\n            landmark: 'Auto-filled from GPS',\n          }));\n          console.log('Location obtained:', coords);\n        },\n        (error) => {\n          console.error('Error getting location:', error);\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"flex h-screen bg-white overflow-hidden\">\n      {/* Sidebar */}\n      <DashboardSidebar />\n\n      {/* Main Content */}\n      <div className=\"flex-1 flex flex-col ml-[258px]\">\n        {/* Header */}\n        <DashboardHeader />\n\n        {/* Main Content */}\n        <main className=\"flex-1 overflow-auto mt-[80px]\">\n          <div className=\"px-6 py-6 max-w-[1920px]\">\n            {/* Page Header */}\n            <div className=\"mb-8\">\n              <h1 className=\"text-[38px] font-semibold text-black font-poppins mb-2\">\n                Profile Setting\n              </h1>\n              <p className=\"text-[16px] text-[#666666] font-poppins\">\n                Manage your KYC documents and track verification status\n              </p>\n            </div>\n\n            {/* Two Column Layout */}\n            <div className=\"flex gap-8\">\n              {/* Left Sidebar - Tabs */}\n              <div className=\"w-[338px] flex-shrink-0\">\n                <div className=\"border border-[#dddddd] rounded-[8px] overflow-hidden\">\n                  {TABS.map((tab) => {\n                    const Icon = tab.icon;\n                    const isActive = activeTab === tab.id;\n\n                    return (\n                      <button\n                        key={tab.id}\n                        onClick={() => setActiveTab(tab.id)}\n                        className={`w-full flex items-center ${\n                          isActive ? 'bg-[#f5ffff]' : 'bg-white hover:bg-gray-50'\n                        } transition-colors`}\n                      >\n                        {/* Active Indicator */}\n                        {isActive && (\n                          <div className=\"w-[10px] h-[40px] bg-[#42b2b1] flex-shrink-0\" />\n                        )}\n                        {!isActive && <div className=\"w-[10px] h-[40px] flex-shrink-0\" />}\n\n                        {/* Content */}\n                        <div className=\"flex-1 flex items-center gap-4 px-4 py-3\">\n                          <Icon\n                            className={`w-6 h-6 ${\n                              isActive ? 'text-[#42b2b1]' : 'text-[#aaaaaa]'\n                            }`}\n                            strokeWidth={2}\n                          />\n                          <span\n                            className={`text-[16px] font-poppins ${\n                              isActive ? 'text-[#42b2b1]' : 'text-[#aaaaaa]'\n                            }`}\n                          >\n                            {tab.name}\n                          </span>\n                        </div>\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n\n              {/* Right Content */}\n              <div className=\"flex-1\">\n                {/* Profile Card */}\n                <div className=\"border border-[#dddddd] rounded-[8px] p-6 mb-8\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-6\">\n                      {/* Avatar */}\n                      <div className=\"w-[136px] h-[136px] bg-[#68c1c1] rounded-full flex items-center justify-center\">\n                        <span className=\"text-[62px] text-white font-poppins\">\n                          FR\n                        </span>\n                      </div>\n\n                      {/* User Info */}\n                      <div>\n                        <h2 className=\"text-[24px] text-black font-poppins mb-2\">\n                          Fayaz rahman\n                        </h2>\n                        <p className=\"text-[12px] text-[#aaaaaa] font-poppins mb-4\">\n                          fayazrahman.@azkashine.com\n                        </p>\n                        <div className=\"mb-2\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <span className=\"text-[12px] text-[#222222] font-poppins\">\n                              Profile Completed\n                            </span>\n                            <span className=\"text-[12px] text-[#222222] font-poppins\">\n                              {profileCompletion}%\n                            </span>\n                          </div>\n                          {/* Progress Bar */}\n                          <div className=\"w-[297px] h-[10px] bg-[#cccccc] rounded-[10px] overflow-hidden\">\n                            <div\n                              className=\"h-full bg-[#42b2b1] rounded-[10px]\"\n                              style={{ width: `${profileCompletion}%` }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Complete Verification Badge */}\n                    <div className=\"bg-[#b3e0e0] flex items-center gap-2 px-3 py-2 rounded-[8px]\">\n                      <CheckCircle2 className=\"w-3 h-3 text-[#222222]\" strokeWidth={2} />\n                      <span className=\"text-[12px] text-[#222222] font-poppins\">\n                        Complete Verification\n                      </span>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Form Content */}\n                <div className=\"border border-[#dddddd] rounded-[8px] p-8\">\n                  {/* Personal Tab */}\n                  {activeTab === 'personal' && (\n                    <>\n                      {/* Personal Section */}\n                      <div className=\"mb-10\">\n                        <div className=\"flex items-center justify-between mb-6\">\n                          <h3 className=\"text-[32px] font-semibold text-black font-poppins\">\n                            Personal\n                          </h3>\n                          <button className=\"bg-[#cccccc] hover:bg-[#bbbbbb] px-4 py-2 rounded-[8px] text-[12px] text-[#222222] font-poppins transition-colors\">\n                            Edit\n                          </button>\n                        </div>\n                        <div className=\"border-t border-[#dddddd] pt-6\">\n                          <div className=\"grid grid-cols-3 gap-6\">\n                            {/* First Name */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                First Name *\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={formData.firstName}\n                                onChange={(e) => handleChange('firstName', e.target.value)}\n                                placeholder=\"Enter First Name\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n\n                            {/* Last Name */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                Last Name *\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={formData.lastName}\n                                onChange={(e) => handleChange('lastName', e.target.value)}\n                                placeholder=\"Enter Last Name\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n\n                            {/* Phone Number */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                Phone Number *\n                              </label>\n                              <input\n                                type=\"tel\"\n                                value={formData.phone}\n                                onChange={(e) => handleChange('phone', e.target.value)}\n                                placeholder=\"Enter Phone Number\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n\n                            {/* Email Address */}\n                            <div className=\"col-span-3\">\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                Email Address *\n                              </label>\n                              <input\n                                type=\"email\"\n                                value={formData.email}\n                                onChange={(e) => handleChange('email', e.target.value)}\n                                placeholder=\"Enter Email Address\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Address Section */}\n                      <div className=\"mb-10\">\n                        <h3 className=\"text-[32px] font-semibold text-black font-poppins mb-6\">\n                          Address\n                        </h3>\n                        <div className=\"border-t border-[#dddddd] pt-6\">\n                          <div className=\"grid grid-cols-3 gap-6\">\n                            {/* Region */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                Region *\n                              </label>\n                              <div className=\"relative\">\n                                <select\n                                  value={formData.region}\n                                  onChange={(e) => handleChange('region', e.target.value)}\n                                  className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#222222] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20 appearance-none\"\n                                >\n                                  <option>Select the option</option>\n                                  <option>Riyadh</option>\n                                  <option>Jeddah</option>\n                                  <option>Dammam</option>\n                                </select>\n                                <ChevronDown className=\"absolute right-4 top-1/2 -translate-y-1/2 w-5 h-5 text-[#222222] pointer-events-none\" />\n                              </div>\n                            </div>\n\n                            {/* City */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                City\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={formData.city}\n                                onChange={(e) => handleChange('city', e.target.value)}\n                                placeholder=\"Enter your City\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n\n                            {/* District */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                District\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={formData.district}\n                                onChange={(e) => handleChange('district', e.target.value)}\n                                placeholder=\"Enter your district\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n\n                            {/* Street Address */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                Street Address\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={formData.streetAddress}\n                                onChange={(e) => handleChange('streetAddress', e.target.value)}\n                                placeholder=\"Enter your address\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n\n                            {/* Postal Code */}\n                            <div className=\"col-span-2\">\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                Postal Code\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={formData.postalCode}\n                                onChange={(e) => handleChange('postalCode', e.target.value)}\n                                placeholder=\"Enter Post Code\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Location Information Section */}\n                      <div>\n                        <div className=\"flex items-center justify-between mb-6\">\n                          <h3 className=\"text-[32px] font-semibold text-black font-poppins\">\n                            Location Information\n                          </h3>\n                          <button\n                            onClick={handleGetLocation}\n                            className=\"bg-[#007d7d] hover:bg-[#006666] flex items-center gap-2 px-4 py-2 rounded-[8px] text-[12px] text-white font-poppins transition-colors\"\n                          >\n                            <MapPin className=\"w-4 h-4\" strokeWidth={2} />\n                            Get My Location\n                          </button>\n                        </div>\n                        <div className=\"border-t border-[#dddddd] pt-6\">\n                          <div className=\"grid grid-cols-2 gap-6\">\n                            {/* Landmark */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                Landmark\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={formData.landmark}\n                                onChange={(e) => handleChange('landmark', e.target.value)}\n                                placeholder=\"Click 'Get My Location' to auto-fill\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n\n                            {/* GPS Coordinates */}\n                            <div>\n                              <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                                GPS Coordinates\n                              </label>\n                              <input\n                                type=\"text\"\n                                value={formData.gpsCoordinates}\n                                onChange={(e) => handleChange('gpsCoordinates', e.target.value)}\n                                placeholder=\"Click 'Get My Location' to auto-fill\"\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </>\n                  )}\n\n                  {/* Property Tab */}\n                  {activeTab === 'property' && (\n                    <div>\n                      <div className=\"flex items-center justify-between mb-6\">\n                        <h3 className=\"text-[32px] font-semibold text-black font-poppins\">\n                          Property\n                        </h3>\n                        <button className=\"bg-[#cccccc] hover:bg-[#bbbbbb] px-4 py-2 rounded-[8px] text-[12px] text-[#222222] font-poppins transition-colors\">\n                          Edit\n                        </button>\n                      </div>\n                      <div className=\"border-t border-[#dddddd] pt-6\">\n                        <div className=\"grid grid-cols-3 gap-6\">\n                          {/* Property Type */}\n                          <div>\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Property Type\n                            </label>\n                            <div className=\"relative\">\n                              <select\n                                value={formData.propertyType}\n                                onChange={(e) => handleChange('propertyType', e.target.value)}\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#222222] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20 appearance-none\"\n                              >\n                                <option>Select the option</option>\n                                <option>Villa</option>\n                                <option>Apartment</option>\n                                <option>Commercial</option>\n                              </select>\n                              <ChevronDown className=\"absolute right-4 top-1/2 -translate-y-1/2 w-5 h-5 text-[#222222] pointer-events-none\" />\n                            </div>\n                          </div>\n\n                          {/* Property Ownership */}\n                          <div>\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Property Ownership\n                            </label>\n                            <div className=\"relative\">\n                              <select\n                                value={formData.propertyOwnership}\n                                onChange={(e) => handleChange('propertyOwnership', e.target.value)}\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#222222] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20 appearance-none\"\n                              >\n                                <option>Select the option</option>\n                                <option>Owned</option>\n                                <option>Rented</option>\n                                <option>Leased</option>\n                              </select>\n                              <ChevronDown className=\"absolute right-4 top-1/2 -translate-y-1/2 w-5 h-5 text-[#222222] pointer-events-none\" />\n                            </div>\n                          </div>\n\n                          {/* Roof Size */}\n                          <div>\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Roof Size (m2)\n                            </label>\n                            <input\n                              type=\"text\"\n                              value={formData.roofSize}\n                              onChange={(e) => handleChange('roofSize', e.target.value)}\n                              placeholder=\"Roof area in square meters\"\n                              className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                            />\n                          </div>\n\n                          {/* Monthly Electricity Consumption */}\n                          <div>\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Monthly Electricity Consumption (kWh)\n                            </label>\n                            <div className=\"relative\">\n                              <select\n                                value={formData.monthlyConsumption}\n                                onChange={(e) => handleChange('monthlyConsumption', e.target.value)}\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#222222] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20 appearance-none\"\n                              >\n                                <option>Select the option</option>\n                                <option>0-500 kWh</option>\n                                <option>500-1000 kWh</option>\n                                <option>1000-2000 kWh</option>\n                                <option>2000+ kWh</option>\n                              </select>\n                              <ChevronDown className=\"absolute right-4 top-1/2 -translate-y-1/2 w-5 h-5 text-[#222222] pointer-events-none\" />\n                            </div>\n                          </div>\n\n                          {/* Electricity Meter Number */}\n                          <div className=\"col-span-2\">\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Electricity Meter Number\n                            </label>\n                            <input\n                              type=\"text\"\n                              value={formData.meterNumber}\n                              onChange={(e) => handleChange('meterNumber', e.target.value)}\n                              placeholder=\"Enter meter number\"\n                              className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Employment Tab */}\n                  {activeTab === 'employment' && (\n                    <div>\n                      <div className=\"flex items-center justify-between mb-6\">\n                        <h3 className=\"text-[32px] font-semibold text-black font-poppins\">\n                          Employment\n                        </h3>\n                        <button className=\"bg-[#cccccc] hover:bg-[#bbbbbb] px-4 py-2 rounded-[8px] text-[12px] text-[#222222] font-poppins transition-colors\">\n                          Edit\n                        </button>\n                      </div>\n                      <div className=\"border-t border-[#dddddd] pt-6\">\n                        <div className=\"grid grid-cols-3 gap-6\">\n                          {/* Employment Status */}\n                          <div>\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Employment Status\n                            </label>\n                            <div className=\"relative\">\n                              <select\n                                value={formData.employmentStatus}\n                                onChange={(e) => handleChange('employmentStatus', e.target.value)}\n                                className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#222222] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20 appearance-none\"\n                              >\n                                <option>Select the option</option>\n                                <option>Full-time</option>\n                                <option>Part-time</option>\n                                <option>Self-employed</option>\n                                <option>Retired</option>\n                              </select>\n                              <ChevronDown className=\"absolute right-4 top-1/2 -translate-y-1/2 w-5 h-5 text-[#222222] pointer-events-none\" />\n                            </div>\n                          </div>\n\n                          {/* Employer Name */}\n                          <div>\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Employer Name\n                            </label>\n                            <input\n                              type=\"text\"\n                              value={formData.employerName}\n                              onChange={(e) => handleChange('employerName', e.target.value)}\n                              placeholder=\"Enter employer name\"\n                              className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                            />\n                          </div>\n\n                          {/* Job Title */}\n                          <div>\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Job Title\n                            </label>\n                            <input\n                              type=\"text\"\n                              value={formData.jobTitle}\n                              onChange={(e) => handleChange('jobTitle', e.target.value)}\n                              placeholder=\"Enter your job title\"\n                              className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                            />\n                          </div>\n\n                          {/* Monthly Income */}\n                          <div>\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Monthly Income\n                            </label>\n                            <input\n                              type=\"text\"\n                              value={formData.monthlyIncome}\n                              onChange={(e) => handleChange('monthlyIncome', e.target.value)}\n                              placeholder=\"Enter monthly income SAR\"\n                              className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                            />\n                          </div>\n\n                          {/* Years Employed */}\n                          <div className=\"col-span-2\">\n                            <label className=\"block text-[16px] font-medium text-black font-poppins mb-2\">\n                              Years Employed\n                            </label>\n                            <input\n                              type=\"text\"\n                              value={formData.yearsEmployed}\n                              onChange={(e) => handleChange('yearsEmployed', e.target.value)}\n                              placeholder=\"Years with current employer\"\n                              className=\"w-full h-[48px] px-4 border border-[#dddddd] rounded-[4px] text-[16px] text-[#888888] placeholder:text-[#888888] font-poppins focus:outline-none focus:border-[#42B2B1] focus:ring-2 focus:ring-[#42B2B1]/20\"\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {/* Preferences Tab */}\n                  {activeTab === 'preferences' && (\n                    <div>\n                      <h3 className=\"text-[32px] font-semibold text-black font-poppins mb-6\">\n                        Preferences\n                      </h3>\n                      <div className=\"border-t border-[#dddddd] pt-6\">\n                        <div className=\"space-y-8\">\n                          {/* Preferred Language */}\n                          <div className=\"flex items-center justify-between\">\n                            <h4 className=\"text-[20px] font-medium text-black font-poppins\">\n                              Preferred Language\n                            </h4>\n                            <button\n                              onClick={handleLanguageToggle}\n                              className={`relative w-[77px] h-[41px] rounded-[20px] border border-[#dddddd] transition-colors ${\n                                preferences.language === 'en' ? 'bg-[#42b2b1]' : 'bg-[#42b2b1]'\n                              }`}\n                            >\n                              <div\n                                className={`absolute top-[4px] w-[35px] h-[34px] bg-[#f5ffff] rounded-[20px] transition-all ${\n                                  preferences.language === 'en' ? 'right-[4px]' : 'left-[4px]'\n                                }`}\n                              />\n                              <div className=\"absolute inset-0 flex items-center justify-between px-2 text-[12px] font-medium\">\n                                <span className={preferences.language === 'ar' ? 'text-[#1a4747]' : 'text-[#b3e0e0]'}>\n                                  العربية\n                                </span>\n                                <span className={preferences.language === 'en' ? 'text-[#1a4747]' : 'text-[#b3e0e0]'}>\n                                  EN\n                                </span>\n                              </div>\n                            </button>\n                          </div>\n\n                          {/* Email Notifications */}\n                          <div className=\"flex items-center justify-between\">\n                            <h4 className=\"text-[20px] font-medium text-black font-poppins\">\n                              Email Notifications\n                            </h4>\n                            <button\n                              onClick={() => handlePreferenceToggle('emailNotifications')}\n                              className={`relative w-[77px] h-[41px] rounded-[20px] border border-[#dddddd] transition-colors ${\n                                preferences.emailNotifications ? 'bg-[#42b2b1]' : 'bg-[#aaaaaa]'\n                              }`}\n                            >\n                              <div\n                                className={`absolute top-[4px] w-[35px] h-[34px] bg-[#f5ffff] rounded-[20px] transition-all ${\n                                  preferences.emailNotifications ? 'right-[4px]' : 'left-[4px]'\n                                }`}\n                              />\n                            </button>\n                          </div>\n\n                          {/* SMS Notifications */}\n                          <div className=\"flex items-center justify-between\">\n                            <h4 className=\"text-[20px] font-medium text-black font-poppins\">\n                              SMS Notifications\n                            </h4>\n                            <button\n                              onClick={() => handlePreferenceToggle('smsNotifications')}\n                              className={`relative w-[77px] h-[41px] rounded-[20px] border border-[#dddddd] transition-colors ${\n                                preferences.smsNotifications ? 'bg-[#42b2b1]' : 'bg-[#aaaaaa]'\n                              }`}\n                            >\n                              <div\n                                className={`absolute top-[4px] w-[35px] h-[34px] bg-[#f5ffff] rounded-[20px] transition-all ${\n                                  preferences.smsNotifications ? 'right-[4px]' : 'left-[4px]'\n                                }`}\n                              />\n                            </button>\n                          </div>\n\n                          {/* Marketing Communications */}\n                          <div className=\"flex items-center justify-between\">\n                            <h4 className=\"text-[20px] font-medium text-black font-poppins\">\n                              Marketing Communications\n                            </h4>\n                            <button\n                              onClick={() => handlePreferenceToggle('marketingCommunications')}\n                              className={`relative w-[77px] h-[41px] rounded-[20px] border border-[#dddddd] transition-colors ${\n                                preferences.marketingCommunications ? 'bg-[#42b2b1]' : 'bg-[#aaaaaa]'\n                              }`}\n                            >\n                              <div\n                                className={`absolute top-[4px] w-[35px] h-[34px] bg-[#f5ffff] rounded-[20px] transition-all ${\n                                  preferences.marketingCommunications ? 'right-[4px]' : 'left-[4px]'\n                                }`}\n                              />\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AALA;;;;;AAeA,MAAM,OAAoB;IACxB;QAAE,IAAI;QAAY,MAAM;QAAY,MAAM,6MAAI;IAAC;IAC/C;QAAE,IAAI;QAAY,MAAM;QAAY,MAAM,8MAAI;IAAC;IAC/C;QAAE,IAAI;QAAc,MAAM;QAAc,MAAM,4NAAS;IAAC;IACxD;QAAE,IAAI;QAAe,MAAM;QAAe,MAAM,yNAAQ;IAAC;CAC1D;AAEc,SAAS;;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,yKAAc,CAAU;IAC1D,MAAM,CAAC,UAAU,YAAY,GAAG,yKAAc,CAAC;QAC7C,WAAW;QACX,WAAW;QACX,UAAU;QACV,OAAO;QACP,OAAO;QACP,QAAQ;QACR,MAAM;QACN,UAAU;QACV,eAAe;QACf,YAAY;QACZ,UAAU;QACV,gBAAgB;QAChB,WAAW;QACX,cAAc;QACd,mBAAmB;QACnB,UAAU;QACV,oBAAoB;QACpB,aAAa;QACb,aAAa;QACb,kBAAkB;QAClB,cAAc;QACd,UAAU;QACV,eAAe;QACf,eAAe;IACjB;IAEA,oBAAoB;IACpB,MAAM,CAAC,aAAa,eAAe,GAAG,yKAAc,CAAC;QACnD,UAAU;QACV,oBAAoB;QACpB,kBAAkB;QAClB,yBAAyB;IAC3B;IAEA,MAAM,oBAAoB;IAE1B,MAAM,eAAe,CAAC,OAAe;QACnC,YAAY,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,MAAM,EAAE;YAAM,CAAC;IAClD;IAEA,MAAM,yBAAyB,CAAC;QAC9B,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,MAAM;YACvB,CAAC;IACH;IAEA,MAAM,uBAAuB;QAC3B,eAAe,CAAA,OAAQ,CAAC;gBACtB,GAAG,IAAI;gBACP,UAAU,KAAK,QAAQ,KAAK,OAAO,OAAO;YAC5C,CAAC;IACH;IAEA,MAAM,oBAAoB;QACxB,IAAI,UAAU,WAAW,EAAE;YACzB,UAAU,WAAW,CAAC,kBAAkB,CACtC,CAAC;gBACC,MAAM,SAAS,AAAC,GAA+B,OAA7B,SAAS,MAAM,CAAC,QAAQ,EAAC,MAA8B,OAA1B,SAAS,MAAM,CAAC,SAAS;gBACxE,YAAY,CAAA,OAAQ,CAAC;wBACnB,GAAG,IAAI;wBACP,gBAAgB;wBAChB,UAAU;oBACZ,CAAC;gBACD,QAAQ,GAAG,CAAC,sBAAsB;YACpC,GACA,CAAC;gBACC,QAAQ,KAAK,CAAC,2BAA2B;YAC3C;QAEJ;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC,mKAAgB;;;;;0BAGjB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC,iKAAe;;;;;kCAGhB,6LAAC;wBAAK,WAAU;kCACd,cAAA,6LAAC;4BAAI,WAAU;;8CAEb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAG,WAAU;sDAAyD;;;;;;sDAGvE,6LAAC;4CAAE,WAAU;sDAA0C;;;;;;;;;;;;8CAMzD,6LAAC;oCAAI,WAAU;;sDAEb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC;gDAAI,WAAU;0DACZ,KAAK,GAAG,CAAC,CAAC;oDACT,MAAM,OAAO,IAAI,IAAI;oDACrB,MAAM,WAAW,cAAc,IAAI,EAAE;oDAErC,qBACE,6LAAC;wDAEC,SAAS,IAAM,aAAa,IAAI,EAAE;wDAClC,WAAW,AAAC,4BAEX,OADC,WAAW,iBAAiB,6BAC7B;;4DAGA,0BACC,6LAAC;gEAAI,WAAU;;;;;;4DAEhB,CAAC,0BAAY,6LAAC;gEAAI,WAAU;;;;;;0EAG7B,6LAAC;gEAAI,WAAU;;kFACb,6LAAC;wEACC,WAAW,AAAC,WAEX,OADC,WAAW,mBAAmB;wEAEhC,aAAa;;;;;;kFAEf,6LAAC;wEACC,WAAW,AAAC,4BAEX,OADC,WAAW,mBAAmB;kFAG/B,IAAI,IAAI;;;;;;;;;;;;;uDAzBR,IAAI,EAAE;;;;;gDA8BjB;;;;;;;;;;;sDAKJ,6LAAC;4CAAI,WAAU;;8DAEb,6LAAC;oDAAI,WAAU;8DACb,cAAA,6LAAC;wDAAI,WAAU;;0EACb,6LAAC;gEAAI,WAAU;;kFAEb,6LAAC;wEAAI,WAAU;kFACb,cAAA,6LAAC;4EAAK,WAAU;sFAAsC;;;;;;;;;;;kFAMxD,6LAAC;;0FACC,6LAAC;gFAAG,WAAU;0FAA2C;;;;;;0FAGzD,6LAAC;gFAAE,WAAU;0FAA+C;;;;;;0FAG5D,6LAAC;gFAAI,WAAU;;kGACb,6LAAC;wFAAI,WAAU;;0GACb,6LAAC;gGAAK,WAAU;0GAA0C;;;;;;0GAG1D,6LAAC;gGAAK,WAAU;;oGACb;oGAAkB;;;;;;;;;;;;;kGAIvB,6LAAC;wFAAI,WAAU;kGACb,cAAA,6LAAC;4FACC,WAAU;4FACV,OAAO;gGAAE,OAAO,AAAC,GAAoB,OAAlB,mBAAkB;4FAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0EAQlD,6LAAC;gEAAI,WAAU;;kFACb,6LAAC,wOAAY;wEAAC,WAAU;wEAAyB,aAAa;;;;;;kFAC9D,6LAAC;wEAAK,WAAU;kFAA0C;;;;;;;;;;;;;;;;;;;;;;;8DAQhE,6LAAC;oDAAI,WAAU;;wDAEZ,cAAc,4BACb;;8EAEE,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAI,WAAU;;8FACb,6LAAC;oFAAG,WAAU;8FAAoD;;;;;;8FAGlE,6LAAC;oFAAO,WAAU;8FAAoH;;;;;;;;;;;;sFAIxI,6LAAC;4EAAI,WAAU;sFACb,cAAA,6LAAC;gFAAI,WAAU;;kGAEb,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,SAAS;gGACzB,UAAU,CAAC,IAAM,aAAa,aAAa,EAAE,MAAM,CAAC,KAAK;gGACzD,aAAY;gGACZ,WAAU;;;;;;;;;;;;kGAKd,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,QAAQ;gGACxB,UAAU,CAAC,IAAM,aAAa,YAAY,EAAE,MAAM,CAAC,KAAK;gGACxD,aAAY;gGACZ,WAAU;;;;;;;;;;;;kGAKd,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,KAAK;gGACrB,UAAU,CAAC,IAAM,aAAa,SAAS,EAAE,MAAM,CAAC,KAAK;gGACrD,aAAY;gGACZ,WAAU;;;;;;;;;;;;kGAKd,6LAAC;wFAAI,WAAU;;0GACb,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,KAAK;gGACrB,UAAU,CAAC,IAAM,aAAa,SAAS,EAAE,MAAM,CAAC,KAAK;gGACrD,aAAY;gGACZ,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8EAQpB,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAG,WAAU;sFAAyD;;;;;;sFAGvE,6LAAC;4EAAI,WAAU;sFACb,cAAA,6LAAC;gFAAI,WAAU;;kGAEb,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGAAI,WAAU;;kHACb,6LAAC;wGACC,OAAO,SAAS,MAAM;wGACtB,UAAU,CAAC,IAAM,aAAa,UAAU,EAAE,MAAM,CAAC,KAAK;wGACtD,WAAU;;0HAEV,6LAAC;0HAAO;;;;;;0HACR,6LAAC;0HAAO;;;;;;0HACR,6LAAC;0HAAO;;;;;;0HACR,6LAAC;0HAAO;;;;;;;;;;;;kHAEV,6LAAC,sOAAW;wGAAC,WAAU;;;;;;;;;;;;;;;;;;kGAK3B,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,IAAI;gGACpB,UAAU,CAAC,IAAM,aAAa,QAAQ,EAAE,MAAM,CAAC,KAAK;gGACpD,aAAY;gGACZ,WAAU;;;;;;;;;;;;kGAKd,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,QAAQ;gGACxB,UAAU,CAAC,IAAM,aAAa,YAAY,EAAE,MAAM,CAAC,KAAK;gGACxD,aAAY;gGACZ,WAAU;;;;;;;;;;;;kGAKd,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,aAAa;gGAC7B,UAAU,CAAC,IAAM,aAAa,iBAAiB,EAAE,MAAM,CAAC,KAAK;gGAC7D,aAAY;gGACZ,WAAU;;;;;;;;;;;;kGAKd,6LAAC;wFAAI,WAAU;;0GACb,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,UAAU;gGAC1B,UAAU,CAAC,IAAM,aAAa,cAAc,EAAE,MAAM,CAAC,KAAK;gGAC1D,aAAY;gGACZ,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8EAQpB,6LAAC;;sFACC,6LAAC;4EAAI,WAAU;;8FACb,6LAAC;oFAAG,WAAU;8FAAoD;;;;;;8FAGlE,6LAAC;oFACC,SAAS;oFACT,WAAU;;sGAEV,6LAAC,uNAAM;4FAAC,WAAU;4FAAU,aAAa;;;;;;wFAAK;;;;;;;;;;;;;sFAIlD,6LAAC;4EAAI,WAAU;sFACb,cAAA,6LAAC;gFAAI,WAAU;;kGAEb,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,QAAQ;gGACxB,UAAU,CAAC,IAAM,aAAa,YAAY,EAAE,MAAM,CAAC,KAAK;gGACxD,aAAY;gGACZ,WAAU;;;;;;;;;;;;kGAKd,6LAAC;;0GACC,6LAAC;gGAAM,WAAU;0GAA6D;;;;;;0GAG9E,6LAAC;gGACC,MAAK;gGACL,OAAO,SAAS,cAAc;gGAC9B,UAAU,CAAC,IAAM,aAAa,kBAAkB,EAAE,MAAM,CAAC,KAAK;gGAC9D,aAAY;gGACZ,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDAUvB,cAAc,4BACb,6LAAC;;8EACC,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAG,WAAU;sFAAoD;;;;;;sFAGlE,6LAAC;4EAAO,WAAU;sFAAoH;;;;;;;;;;;;8EAIxI,6LAAC;oEAAI,WAAU;8EACb,cAAA,6LAAC;wEAAI,WAAU;;0FAEb,6LAAC;;kGACC,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFAAI,WAAU;;0GACb,6LAAC;gGACC,OAAO,SAAS,YAAY;gGAC5B,UAAU,CAAC,IAAM,aAAa,gBAAgB,EAAE,MAAM,CAAC,KAAK;gGAC5D,WAAU;;kHAEV,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;;;;;;;0GAEV,6LAAC,sOAAW;gGAAC,WAAU;;;;;;;;;;;;;;;;;;0FAK3B,6LAAC;;kGACC,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFAAI,WAAU;;0GACb,6LAAC;gGACC,OAAO,SAAS,iBAAiB;gGACjC,UAAU,CAAC,IAAM,aAAa,qBAAqB,EAAE,MAAM,CAAC,KAAK;gGACjE,WAAU;;kHAEV,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;;;;;;;0GAEV,6LAAC,sOAAW;gGAAC,WAAU;;;;;;;;;;;;;;;;;;0FAK3B,6LAAC;;kGACC,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFACC,MAAK;wFACL,OAAO,SAAS,QAAQ;wFACxB,UAAU,CAAC,IAAM,aAAa,YAAY,EAAE,MAAM,CAAC,KAAK;wFACxD,aAAY;wFACZ,WAAU;;;;;;;;;;;;0FAKd,6LAAC;;kGACC,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFAAI,WAAU;;0GACb,6LAAC;gGACC,OAAO,SAAS,kBAAkB;gGAClC,UAAU,CAAC,IAAM,aAAa,sBAAsB,EAAE,MAAM,CAAC,KAAK;gGAClE,WAAU;;kHAEV,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;;;;;;;0GAEV,6LAAC,sOAAW;gGAAC,WAAU;;;;;;;;;;;;;;;;;;0FAK3B,6LAAC;gFAAI,WAAU;;kGACb,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFACC,MAAK;wFACL,OAAO,SAAS,WAAW;wFAC3B,UAAU,CAAC,IAAM,aAAa,eAAe,EAAE,MAAM,CAAC,KAAK;wFAC3D,aAAY;wFACZ,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDASrB,cAAc,8BACb,6LAAC;;8EACC,6LAAC;oEAAI,WAAU;;sFACb,6LAAC;4EAAG,WAAU;sFAAoD;;;;;;sFAGlE,6LAAC;4EAAO,WAAU;sFAAoH;;;;;;;;;;;;8EAIxI,6LAAC;oEAAI,WAAU;8EACb,cAAA,6LAAC;wEAAI,WAAU;;0FAEb,6LAAC;;kGACC,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFAAI,WAAU;;0GACb,6LAAC;gGACC,OAAO,SAAS,gBAAgB;gGAChC,UAAU,CAAC,IAAM,aAAa,oBAAoB,EAAE,MAAM,CAAC,KAAK;gGAChE,WAAU;;kHAEV,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;kHACR,6LAAC;kHAAO;;;;;;;;;;;;0GAEV,6LAAC,sOAAW;gGAAC,WAAU;;;;;;;;;;;;;;;;;;0FAK3B,6LAAC;;kGACC,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFACC,MAAK;wFACL,OAAO,SAAS,YAAY;wFAC5B,UAAU,CAAC,IAAM,aAAa,gBAAgB,EAAE,MAAM,CAAC,KAAK;wFAC5D,aAAY;wFACZ,WAAU;;;;;;;;;;;;0FAKd,6LAAC;;kGACC,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFACC,MAAK;wFACL,OAAO,SAAS,QAAQ;wFACxB,UAAU,CAAC,IAAM,aAAa,YAAY,EAAE,MAAM,CAAC,KAAK;wFACxD,aAAY;wFACZ,WAAU;;;;;;;;;;;;0FAKd,6LAAC;;kGACC,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFACC,MAAK;wFACL,OAAO,SAAS,aAAa;wFAC7B,UAAU,CAAC,IAAM,aAAa,iBAAiB,EAAE,MAAM,CAAC,KAAK;wFAC7D,aAAY;wFACZ,WAAU;;;;;;;;;;;;0FAKd,6LAAC;gFAAI,WAAU;;kGACb,6LAAC;wFAAM,WAAU;kGAA6D;;;;;;kGAG9E,6LAAC;wFACC,MAAK;wFACL,OAAO,SAAS,aAAa;wFAC7B,UAAU,CAAC,IAAM,aAAa,iBAAiB,EAAE,MAAM,CAAC,KAAK;wFAC7D,aAAY;wFACZ,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wDASrB,cAAc,+BACb,6LAAC;;8EACC,6LAAC;oEAAG,WAAU;8EAAyD;;;;;;8EAGvE,6LAAC;oEAAI,WAAU;8EACb,cAAA,6LAAC;wEAAI,WAAU;;0FAEb,6LAAC;gFAAI,WAAU;;kGACb,6LAAC;wFAAG,WAAU;kGAAkD;;;;;;kGAGhE,6LAAC;wFACC,SAAS;wFACT,WAAW,AAAC,uFAEX,OADC,YAAY,QAAQ,KAAK,OAAO,iBAAiB;;0GAGnD,6LAAC;gGACC,WAAW,AAAC,mFAEX,OADC,YAAY,QAAQ,KAAK,OAAO,gBAAgB;;;;;;0GAGpD,6LAAC;gGAAI,WAAU;;kHACb,6LAAC;wGAAK,WAAW,YAAY,QAAQ,KAAK,OAAO,mBAAmB;kHAAkB;;;;;;kHAGtF,6LAAC;wGAAK,WAAW,YAAY,QAAQ,KAAK,OAAO,mBAAmB;kHAAkB;;;;;;;;;;;;;;;;;;;;;;;;0FAQ5F,6LAAC;gFAAI,WAAU;;kGACb,6LAAC;wFAAG,WAAU;kGAAkD;;;;;;kGAGhE,6LAAC;wFACC,SAAS,IAAM,uBAAuB;wFACtC,WAAW,AAAC,uFAEX,OADC,YAAY,kBAAkB,GAAG,iBAAiB;kGAGpD,cAAA,6LAAC;4FACC,WAAW,AAAC,mFAEX,OADC,YAAY,kBAAkB,GAAG,gBAAgB;;;;;;;;;;;;;;;;;0FAOzD,6LAAC;gFAAI,WAAU;;kGACb,6LAAC;wFAAG,WAAU;kGAAkD;;;;;;kGAGhE,6LAAC;wFACC,SAAS,IAAM,uBAAuB;wFACtC,WAAW,AAAC,uFAEX,OADC,YAAY,gBAAgB,GAAG,iBAAiB;kGAGlD,cAAA,6LAAC;4FACC,WAAW,AAAC,mFAEX,OADC,YAAY,gBAAgB,GAAG,gBAAgB;;;;;;;;;;;;;;;;;0FAOvD,6LAAC;gFAAI,WAAU;;kGACb,6LAAC;wFAAG,WAAU;kGAAkD;;;;;;kGAGhE,6LAAC;wFACC,SAAS,IAAM,uBAAuB;wFACtC,WAAW,AAAC,uFAEX,OADC,YAAY,uBAAuB,GAAG,iBAAiB;kGAGzD,cAAA,6LAAC;4FACC,WAAW,AAAC,mFAEX,OADC,YAAY,uBAAuB,GAAG,gBAAgB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBxF;GArsBwB;KAAA","debugId":null}}]
}